name: "TEST"

on:
  push:
    # Already covered by "publish.yml" workflow
    branches:
      - '*'         # matches every branch that doesn't contain a '/'
      - '*/*'       # matches every branch containing a single '/'
      - '**'        # matches every branch
      - '!master'
      - '!main'
      - '!default'
    tags-ignore:
      - '**'
  workflow_dispatch:
    ref:
      type: string
      description: "[ref] e.g. branch, tag or commit to checkout [default: github.ref_name || github.head_ref ]"
      required: false

jobs:
  node_test:
    name: "Node Test"
    uses: YunaBraska/YunaBraska/.github/workflows/wc_node_test.yml@main
    with:
      ref: ${{ inputs.ref || github.ref_name || github.head_ref }}
  show_case:
    needs: node_test
    name: "Show Case"
    runs-on: ubuntu-latest
    timeout-minutes: 1
    steps:
      - name: "Checkout [${{ inputs.ref || github.ref_name || github.head_ref }}]"
        uses: actions/checkout@main
        with:
          ref: ${{ inputs.ref || github.ref_name || github.head_ref }}
      - name: "Get Java Version"
        id: "read_java"
        uses: YunaBraska/java-info-action@main
        with:
          work-dir: '.'
          deep: '-1'
          jv-fallback: 8
          pv-fallback: '0.0.1'
      - name: "Print Java Version"
        run: |
          echo "java_version [${{ steps.read_java.outputs.java_version }}]"
          echo "artifact_name [${{ steps.read_java.outputs.artifact_name }}]"
          echo "project_version [${{ steps.read_java.outputs.project_version }}]"
          echo "project_encoding [${{ steps.read_java.outputs.project_encoding }}]"
          echo "is_gradle [${{ steps.read_java.outputs.is_gradle }}]"
          echo "is_maven [${{ steps.read_java.outputs.is_maven }}]"
          echo "has_wrapper [${{ steps.read_java.outputs.has_wrapper }}]"
          echo "builder_name [${{ steps.read_java.outputs.builder_name }}]"
          echo "x_sourceCompatibility [${{ steps.read_java.outputs.x_sourceCompatibility }}]"
          echo "x_project_build_finalName [${{ steps.read_java.outputs.x_project_build_finalName }}]"
          echo "x_groovyOptions_encoding [${{ steps.read_java.outputs.x_groovyOptions_encoding }}]"
          echo "X_net_minidev_json-smart_version [${{ steps.read_java.outputs.x_project_dependencies_dependency_net_minidev_json-smart_version }}]"
